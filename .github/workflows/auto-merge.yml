name: Auto Merge Main into Feature Branch

on:
  push:
    branches:
      - main

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: â™¼ Update PRs
        uses: actions/github-script@v7
        id: my-script
        with:
          result-encoding: string
          retries: 3
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
                base: 'main',
                sort: 'updated',
                state: 'open',
                ...context.repo
            })
            const labeledPullRequests = pullRequests.filter(pr => pr.labels.filter(label => label.name == 'autoupdate').length > 0)

            for (let pr of labeledPullRequests) {
                console.info("Check pull request number [" + `${pr.number}` + "]")
                console.info("  -", "title:", pr.title)
                console.info("  -", "url:", pr.html_url)
                try {
                    let changes = await github.rest.repos.compareCommits({
                        ...context.repo,
                        base: pr.head.ref,
                        head: pr.base.ref,
                        // mediaType: {
                        //     format: "diff"
                        // }
                    });


                    // after merging main to PR the comparison becomes 'behind'
                    if (changes.data.status == 'behind') {
                        console.info("  -", "comparison to main:", "no changes detected")
                        console.info()
                        continue
                    }

                    console.info("  -", "comparison to main:", "changes detected")

                    // merge main to pull request
                    let updateResult = await github.rest.pulls.updateBranch({
                        ...context.repo,
                        expected_head_sha: pr.head.sha,
                        pull_number: pr.number,
                    });

                    // comment on pull request
                    let commentMessage = updateResult.status == 202 ? "Merge success" : "Merge failed"
                    let commentResult = await github.rest.issues.createComment({
                        ...context.repo,
                        issue_number: pr.number,
                        body: commentMessage
                    });
                    console.info("  - comment created", commentResult.status == 201 ? "successfully" : "unsuccessfully")
                    console.info()
                } catch (err) {
                    core.error(err);
                }
            }